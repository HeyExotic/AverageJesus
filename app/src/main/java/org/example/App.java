/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import java.util.Arrays;

public class App {
    public static void main(String[] args) {
        testCalculations(new int[]{5, 3, 8, 1, 6}, "Normal array");
        testCalculations(new int[]{}, "Empty array");
        testCalculations(null, "Null array");
    }

    private static void testCalculations(int[] array, String description) {
        System.out.println("\nTesting " + description + ": " + 
                         (array == null ? "null" : Arrays.toString(array)));
        
        testOperation(array, "minWithLoop", ArrayCalculations::minWithLoop);
        testOperation(array, "maxWithLoop", ArrayCalculations::maxWithLoop);
        testOperation(array, "sumWithLoop", ArrayCalculations::sumWithLoop);
        testOperation(array, "averageWithLoop", ArrayCalculations::averageWithLoop);
        
        testOperation(array, "minWithStream", ArrayCalculations::minWithStream);
        testOperation(array, "maxWithStream", ArrayCalculations::maxWithStream);
        testOperation(array, "sumWithStream", ArrayCalculations::sumWithStream);
        testOperation(array, "averageWithStream", ArrayCalculations::averageWithStream);
    }

    @FunctionalInterface
    private interface ArrayOperation {
        Object apply(int[] array) throws IllegalArgumentException;
    }

    private static void testOperation(int[] array, String operationName, ArrayOperation operation) {
        try {
            Object result = operation.apply(array);
            System.out.printf("%-15s: %s%n", operationName, result);
        } catch (IllegalArgumentException e) {
            System.out.printf("%-15s: ERROR - %s%n", operationName, e.getMessage());
        }
    }
}
